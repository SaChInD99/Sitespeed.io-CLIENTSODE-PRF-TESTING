{
  "version": 3,
  "sources": ["../../../src/helpers/index.js"],
  "sourcesContent": ["import { averageIntensity } from \"../index.js\";\nimport {\n  GLOBAL_GRID_INTENSITY as SWDM3_GLOBAL_GRID_INTENSITY,\n  SWDV4,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  RETURNING_VISITOR_PERCENTAGE,\n  SWDMV3_RATINGS,\n  SWDMV4_RATINGS,\n} from \"../constants/index.js\";\n\nconst SWDM4_GLOBAL_GRID_INTENSITY = SWDV4.GLOBAL_GRID_INTENSITY;\n// Shared type definitions to be used across different files\n\n/**\n * @typedef {Object} DomainCheckOptions options to control the behavior when checking a domain\n * @property {string} userAgentIdentifier - Optional. The app, site, or organisation that is making the request.\n * @property {boolean} verbose - Optional. Whether to return a verbose response.\n * @property {string[]} db - Optional. A database list to use for lookups.\n */\n\nconst formatNumber = (num) => parseFloat(num.toFixed(2));\n\nconst lessThanEqualTo = (num, limit) => num <= limit;\n\nfunction parseOptions(options = {}, version = 3, green = false) {\n  const globalGridIntensity =\n    version === 4 ? SWDM4_GLOBAL_GRID_INTENSITY : SWDM3_GLOBAL_GRID_INTENSITY;\n  // CHeck that it is an object\n  if (typeof options !== \"object\") {\n    throw new Error(\"Options must be an object\");\n  }\n\n  const adjustments = {};\n\n  if (options?.gridIntensity) {\n    adjustments.gridIntensity = {};\n    const { device, dataCenter, network } = options.gridIntensity;\n    if (device || device === 0) {\n      if (typeof device === \"object\") {\n        if (!averageIntensity.data[device.country?.toUpperCase()]) {\n          console.warn(\n            `\"${device.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \\nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information. \\nFalling back to global average grid intensity.`\n          );\n          adjustments.gridIntensity[\"device\"] = {\n            value: globalGridIntensity,\n          };\n        }\n        adjustments.gridIntensity[\"device\"] = {\n          country: device.country,\n          value: parseFloat(\n            averageIntensity.data[device.country?.toUpperCase()]\n          ),\n        };\n      } else if (typeof device === \"number\") {\n        adjustments.gridIntensity[\"device\"] = {\n          value: device,\n        };\n      } else {\n        adjustments.gridIntensity[\"device\"] = {\n          value: globalGridIntensity,\n        };\n        console.warn(\n          `The device grid intensity must be a number or an object. You passed in a ${typeof device}. \\nFalling back to global average grid intensity.`\n        );\n      }\n    }\n    if (dataCenter || dataCenter === 0) {\n      if (typeof dataCenter === \"object\") {\n        if (!averageIntensity.data[dataCenter.country?.toUpperCase()]) {\n          console.warn(\n            `\"${dataCenter.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \\nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information.  \\nFalling back to global average grid intensity.`\n          );\n          adjustments.gridIntensity[\"dataCenter\"] = {\n            value: SWDM3_GLOBAL_GRID_INTENSITY,\n          };\n        }\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          country: dataCenter.country,\n          value: parseFloat(\n            averageIntensity.data[dataCenter.country?.toUpperCase()]\n          ),\n        };\n      } else if (typeof dataCenter === \"number\") {\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          value: dataCenter,\n        };\n      } else {\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          value: globalGridIntensity,\n        };\n        console.warn(\n          `The data center grid intensity must be a number or an object. You passed in a ${typeof dataCenter}. \\nFalling back to global average grid intensity.`\n        );\n      }\n    }\n    if (network || network === 0) {\n      if (typeof network === \"object\") {\n        if (!averageIntensity.data[network.country?.toUpperCase()]) {\n          console.warn(\n            `\"${network.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \\nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information.  Falling back to global average grid intensity. \\nFalling back to global average grid intensity.`\n          );\n          adjustments.gridIntensity[\"network\"] = {\n            value: globalGridIntensity,\n          };\n        }\n        adjustments.gridIntensity[\"network\"] = {\n          country: network.country,\n          value: parseFloat(\n            averageIntensity.data[network.country?.toUpperCase()]\n          ),\n        };\n      } else if (typeof network === \"number\") {\n        adjustments.gridIntensity[\"network\"] = {\n          value: network,\n        };\n      } else {\n        adjustments.gridIntensity[\"network\"] = {\n          value: globalGridIntensity,\n        };\n        console.warn(\n          `The network grid intensity must be a number or an object. You passed in a ${typeof network}. \\nFalling back to global average grid intensity.`\n        );\n      }\n    }\n  } else {\n    adjustments.gridIntensity = {\n      device: { value: globalGridIntensity },\n      dataCenter: { value: globalGridIntensity },\n      network: { value: globalGridIntensity },\n    };\n  }\n\n  if (options?.dataReloadRatio || options.dataReloadRatio === 0) {\n    if (typeof options.dataReloadRatio === \"number\") {\n      if (options.dataReloadRatio >= 0 && options.dataReloadRatio <= 1) {\n        adjustments.dataReloadRatio = options.dataReloadRatio;\n      } else {\n        adjustments.dataReloadRatio =\n          version === 3 ? PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD : 0;\n        console.warn(\n          `The dataReloadRatio option must be a number between 0 and 1. You passed in ${options.dataReloadRatio}. \\nFalling back to default value.`\n        );\n      }\n    } else {\n      adjustments.dataReloadRatio =\n        version === 3 ? PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD : 0;\n      console.warn(\n        `The dataReloadRatio option must be a number. You passed in a ${typeof options.dataReloadRatio}. \\nFalling back to default value.`\n      );\n    }\n  } else {\n    adjustments.dataReloadRatio =\n      version === 3 ? PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD : 0;\n    console.warn(\n      `The dataReloadRatio option must be a number. You passed in a ${typeof options.dataReloadRatio}. \\nFalling back to default value.`\n    );\n  }\n\n  if (options?.firstVisitPercentage || options.firstVisitPercentage === 0) {\n    if (typeof options.firstVisitPercentage === \"number\") {\n      if (\n        options.firstVisitPercentage >= 0 &&\n        options.firstVisitPercentage <= 1\n      ) {\n        adjustments.firstVisitPercentage = options.firstVisitPercentage;\n      } else {\n        adjustments.firstVisitPercentage =\n          version === 3 ? FIRST_TIME_VIEWING_PERCENTAGE : 1;\n        console.warn(\n          `The firstVisitPercentage option must be a number between 0 and 1. You passed in ${options.firstVisitPercentage}. \\nFalling back to default value.`\n        );\n      }\n    } else {\n      adjustments.firstVisitPercentage =\n        version === 3 ? FIRST_TIME_VIEWING_PERCENTAGE : 1;\n      console.warn(\n        `The firstVisitPercentage option must be a number. You passed in a ${typeof options.firstVisitPercentage}. \\nFalling back to default value.`\n      );\n    }\n  } else {\n    adjustments.firstVisitPercentage =\n      version === 3 ? FIRST_TIME_VIEWING_PERCENTAGE : 1;\n    console.warn(\n      `The firstVisitPercentage option must be a number. You passed in a ${typeof options.firstVisitPercentage}. \\nFalling back to default value.`\n    );\n  }\n\n  if (options?.returnVisitPercentage || options.returnVisitPercentage === 0) {\n    if (typeof options.returnVisitPercentage === \"number\") {\n      if (\n        options.returnVisitPercentage >= 0 &&\n        options.returnVisitPercentage <= 1\n      ) {\n        adjustments.returnVisitPercentage = options.returnVisitPercentage;\n      } else {\n        adjustments.returnVisitPercentage =\n          version === 3 ? RETURNING_VISITOR_PERCENTAGE : 0;\n        console.warn(\n          `The returnVisitPercentage option must be a number between 0 and 1. You passed in ${options.returnVisitPercentage}. \\nFalling back to default value.`\n        );\n      }\n    } else {\n      adjustments.returnVisitPercentage =\n        version === 3 ? RETURNING_VISITOR_PERCENTAGE : 0;\n      console.warn(\n        `The returnVisitPercentage option must be a number. You passed in a ${typeof options.returnVisitPercentage}. \\nFalling back to default value.`\n      );\n    }\n  } else {\n    adjustments.returnVisitPercentage =\n      version === 3 ? RETURNING_VISITOR_PERCENTAGE : 0;\n    console.warn(\n      `The returnVisitPercentage option must be a number. You passed in a ${typeof options.returnVisitPercentage}. \\nFalling back to default value.`\n    );\n  }\n\n  if (\n    options?.greenHostingFactor ||\n    (options.greenHostingFactor === 0 && version === 4)\n  ) {\n    if (typeof options.greenHostingFactor === \"number\") {\n      if (options.greenHostingFactor >= 0 && options.greenHostingFactor <= 1) {\n        adjustments.greenHostingFactor = options.greenHostingFactor;\n      } else {\n        adjustments.greenHostingFactor = 0;\n        console.warn(\n          `The returnVisitPercentage option must be a number between 0 and 1. You passed in ${options.returnVisitPercentage}. \\nFalling back to default value.`\n        );\n      }\n    } else {\n      adjustments.greenHostingFactor = 0;\n      console.warn(\n        `The returnVisitPercentage option must be a number. You passed in a ${typeof options.returnVisitPercentage}. \\nFalling back to default value.`\n      );\n    }\n  } else if (version === 4) {\n    adjustments.greenHostingFactor = 0;\n  }\n\n  if (green) {\n    adjustments.greenHostingFactor = 1;\n  }\n\n  return adjustments;\n}\n\n/**\n * Returns an object containing all the HTTP headers to use when making a request to the Green Web Foundation API.\n * @param {string} comment - Optional. The app, site, or organisation that is making the request.\n *\n * @returns {import('http').OutgoingHttpHeaders}\n */\nfunction getApiRequestHeaders(comment = \"\") {\n  return { \"User-Agent\": `co2js/${process.env.CO2JS_VERSION} ${comment}` };\n}\n\n/**\n * Returns the SWDM rating for a given CO2e value and version of the SWDM.\n * @param {number} co2e - The CO2e value to rate.\n * @param {number} swdmVersion - The version of the SWDM to use. Defaults to version 3.\n * @returns {string} The SWDM rating.\n */\nfunction outputRating(co2e, swdmVersion) {\n  let {\n    FIFTH_PERCENTILE,\n    TENTH_PERCENTILE,\n    TWENTIETH_PERCENTILE,\n    THIRTIETH_PERCENTILE,\n    FORTIETH_PERCENTILE,\n    FIFTIETH_PERCENTILE,\n  } = SWDMV3_RATINGS;\n\n  if (swdmVersion === 4) {\n    FIFTH_PERCENTILE = SWDMV4_RATINGS.FIFTH_PERCENTILE;\n    TENTH_PERCENTILE = SWDMV4_RATINGS.TENTH_PERCENTILE;\n    TWENTIETH_PERCENTILE = SWDMV4_RATINGS.TWENTIETH_PERCENTILE;\n    THIRTIETH_PERCENTILE = SWDMV4_RATINGS.THIRTIETH_PERCENTILE;\n    FORTIETH_PERCENTILE = SWDMV4_RATINGS.FORTIETH_PERCENTILE;\n    FIFTIETH_PERCENTILE = SWDMV4_RATINGS.FIFTIETH_PERCENTILE;\n  }\n\n  if (lessThanEqualTo(co2e, FIFTH_PERCENTILE)) {\n    return \"A+\";\n  } else if (lessThanEqualTo(co2e, TENTH_PERCENTILE)) {\n    return \"A\";\n  } else if (lessThanEqualTo(co2e, TWENTIETH_PERCENTILE)) {\n    return \"B\";\n  } else if (lessThanEqualTo(co2e, THIRTIETH_PERCENTILE)) {\n    return \"C\";\n  } else if (lessThanEqualTo(co2e, FORTIETH_PERCENTILE)) {\n    return \"D\";\n  } else if (lessThanEqualTo(co2e, FIFTIETH_PERCENTILE)) {\n    return \"E\";\n  } else {\n    return \"F\";\n  }\n}\n\nexport {\n  formatNumber,\n  parseOptions,\n  getApiRequestHeaders,\n  lessThanEqualTo,\n  outputRating,\n};\n"],
  "mappings": "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",
  "names": []
}
